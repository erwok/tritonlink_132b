[DROP all]
DROP TABLE GRADE_CONVERSION, STUDENT_SECTION, STUDENT_ENROLLMENT, DegreeConcentrations, ConcentrationCourses, Concentration, CourseOffering, CurrentCourses, TCProfs, ThesisCommittee, Degree, ReviewSessions, WeeklyMeetings, probation, probator, take, taker, pastTake, pastTaker, Booklist, Teaches, Section, Candidate, Precandidate, Master, Undergraduate, Student, Faculty, CourseOffering, QuarterDates, Class, Prerequisite, PastCourseNums, Course;

CREATE TABLE Course (
    cr_courseNumber VARCHAR(255) PRIMARY KEY,
    cr_minUnits INT NOT NULL,
    cr_maxUnits INT NOT NULL,
    cr_gradeOption VARCHAR(255) NOT NULL,
    cr_lab VARCHAR(255),
    cr_consent VARCHAR(255)
);

CREATE TABLE PastCourseNums (
    cr_courseNumber VARCHAR(255) NOT NULL,
    oldCourseNumber VARCHAR(255),
    CONSTRAINT FK_pcn FOREIGN KEY (cr_courseNumber) REFERENCES Course(cr_courseNumber) ON DELETE CASCADE
);

CREATE TABLE Prerequisite (
    prerequisites_id VARCHAR(255) NOT NULL PRIMARY KEY,
    mainCourseNumber VARCHAR(255) NOT NULL,
    prerequisiteCourseNumber VARCHAR(255) NOT NULL,
    CONSTRAINT FK_PreCourse1 FOREIGN KEY (mainCourseNumber) REFERENCES Course(cr_courseNumber) ON DELETE CASCADE,
    CONSTRAINT FK_PreCourse2 FOREIGN KEY (prerequisiteCourseNumber) REFERENCES Course(cr_courseNumber) ON DELETE CASCADE
);

CREATE TABLE Class (
    cl_title VARCHAR(255) NOT NULL,
    cl_year INT NOT NULL,
    cl_quarter VARCHAR(255) NOT NULL,
    CONSTRAINT PK_Class_group PRIMARY KEY(cl_title, cl_year, cl_quarter)
);

CREATE TABLE QuarterDates (
	quarter VARCHAR(255) NOT NULL,
	year INT NOT NULL,
	start_date VARCHAR(255) NOT NULL,
	end_date VARCHAR(255) NOT NULL,
	CONSTRAINT Pk_qd PRIMARY KEY (quarter, year)
);

CREATE TABLE CourseOffering (
    cr_courseNumber VARCHAR(255) NOT NULL,
    cl_title VARCHAR(255) NOT NULL,
    cl_year INT NOT NULL,
    cl_quarter VARCHAR(255) NOT NULL,
    CONSTRAINT FK_CourseOffering_from_Class FOREIGN KEY (cr_courseNumber) REFERENCES Course(cr_courseNumber) ON DELETE CASCADE,
    CONSTRAINT FK_CourseOffering_from_Class FOREIGN KEY (cl_title, cl_year, cl_quarter) REFERENCES Class(cl_title, cl_year, cl_quarter) ON DELETE CASCADE
);

CREATE TABLE Faculty (
    fc_name VARCHAR(255) PRIMARY KEY
);

CREATE TABLE Student (
    st_ID VARCHAR(255) PRIMARY KEY,
    st_SSN VARCHAR(255) UNIQUE NOT NULL,
    st_enrollmentStatus VARCHAR(255) NOT NULL,
    st_residential VARCHAR(255) NOT NULL,
    st_firstName VARCHAR(255) NOT NULL,
    st_middleName VARCHAR(255),
    st_lastName VARCHAR(255) NOT NULL,
    academic_status VARCHAR(255) NOT NULL
);

CREATE TABLE Undergraduate (
    st_ID VARCHAR(255) PRIMARY KEY NOT NULL,
    major VARCHAR(255) NOT NULL,
    minor VARCHAR(255),
    CONSTRAINT fk_u_st FOREIGN KEY (st_ID) REFERENCES Student(st_ID) ON DELETE CASCADE
);

CREATE TABLE Master (
    st_ID VARCHAR(255) PRIMARY KEY NOT NULL,
    department VARCHAR(255) NOT NULL,
    CONSTRAINT fk_m_st FOREIGN KEY (st_ID) REFERENCES Student(st_ID) ON DELETE CASCADE
);

CREATE TABLE Precandidate (
    st_ID VARCHAR(255) PRIMARY KEY NOT NULL,
    CONSTRAINT fk_pc_st FOREIGN KEY (st_ID) REFERENCES Student(st_ID) ON DELETE CASCADE
);

CREATE TABLE Candidate (
    st_ID VARCHAR(255) PRIMARY KEY NOT NULL,
    advisor VARCHAR(255) NOT NULL, 
    CONSTRAINT fk_c_st FOREIGN KEY (st_ID) REFERENCES Student(st_ID) ON DELETE CASCADE
);

CREATE TABLE Section (
    s_sectionID VARCHAR(255) PRIMARY KEY,
    s_capacity INT NOT NULL,
    courseNumber VARCHAR(255) NOT NULL,
    classTitle VARCHAR(255) NOT NULL,
    classYear INT NOT NULL,
    classQuarter VARCHAR(255) NOT NULL,
    CONSTRAINT FK_Section_from_Course FOREIGN KEY (courseNumber) REFERENCES Course(cr_courseNumber) ON DELETE CASCADE,
    CONSTRAINT FK_Section_from_Class FOREIGN KEY (classTitle, classYear, classQuarter) REFERENCES Class(cl_title, cl_year, cl_quarter) ON DELETE CASCADE
);

CREATE TABLE Teaches (
    s_sectionID VARCHAR(255) NOT NULL,
    fc_name VARCHAR(255) NOT NULL,
    CONSTRAINT FK_Teaches_from_Section FOREIGN KEY (s_sectionID) REFERENCES Section(s_sectionID) ON DELETE CASCADE,
    CONSTRAINT FK_Teaches_from_Faculty FOREIGN KEY (fc_name) REFERENCES Faculty(fc_name) ON DELETE CASCADE
);

CREATE TABLE Booklist (
    ISBN INT NOT NULL,
    title VARCHAR(255) NOT NULL,
    edition INT,
    publisher VARCHAR(255),
    author_fname VARCHAR(255),
    author_lname VARCHAR(255),
    s_sectionID VARCHAR(255) NOT NULL,
    CONSTRAINT FK_Booklist_from_Section FOREIGN KEY (s_sectionID) REFERENCES Section(s_sectionID) ON DELETE CASCADE
);

CREATE TABLE pastTaker (
    st_ID VARCHAR(255) PRIMARY KEY,
    CONSTRAINT FK_pastTaker_from_Student FOREIGN KEY (st_ID) REFERENCES Student(st_ID) ON DELETE CASCADE
);

CREATE TABLE pastTake (
    st_ID VARCHAR(255) NOT NULL,
    cr_courseNumber VARCHAR(255) NOT NULL,
    cl_title VARCHAR(255) NOT NULL,
    cl_year INT NOT NULL,
    cl_quarter VARCHAR(255) NOT NULL,
    s_sectionID VARCHAR(255) NOT NULL,
    pastTake_gradingOption VARCHAR(255) NOT NULL,
    pastTake_units VARCHAR(255) NOT NULL,
    pastTake_grade VARCHAR(255) NOT NULL,
    CONSTRAINT FK_pastTake_from_pastTaker FOREIGN KEY (st_ID) REFERENCES pastTaker(st_ID) ON DELETE CASCADE,
    CONSTRAINT FK_pastTake_from_Course FOREIGN KEY (cr_courseNumber) REFERENCES Course(cr_courseNumber) ON DELETE CASCADE,
    CONSTRAINT FK_pastTake_from_Class FOREIGN KEY (cl_title, cl_year, cl_quarter) REFERENCES Class(cl_title, cl_year, cl_quarter) ON DELETE CASCADE,
    CONSTRAINT FK_pastTake_from_Section FOREIGN KEY (s_sectionID) REFERENCES Section(s_sectionID) ON DELETE CASCADE
);

CREATE TABLE taker (
    st_ID VARCHAR(255) PRIMARY KEY,
    CONSTRAINT FK_taker_from_Student FOREIGN KEY (st_ID) REFERENCES Student(st_ID) ON DELETE CASCADE
);

CREATE TABLE take (
    st_ID VARCHAR(255) NOT NULL,
    cr_courseNumber VARCHAR(255) NOT NULL,
    cl_title VARCHAR(255) NOT NULL,
    cl_year INT NOT NULL,
    cl_quarter VARCHAR(255) NOT NULL,
    s_sectionID VARCHAR(255) NOT NULL,
    take_enrollmentStatus VARCHAR(255) NOT NULL,
    take_gradingOption VARCHAR(255) NOT NULL,
    take_units VARCHAR(255) NOT NULL,
    CONSTRAINT FK_take_from_taker FOREIGN KEY (st_ID) REFERENCES taker(st_ID) ON DELETE CASCADE,
    CONSTRAINT FK_take_from_Course FOREIGN KEY (cr_courseNumber) REFERENCES Course(cr_courseNumber) ON DELETE CASCADE,
    CONSTRAINT FK_take_from_Class FOREIGN KEY (cl_title, cl_year, cl_quarter) REFERENCES Class(cl_title, cl_year, cl_quarter) ON DELETE CASCADE,
    CONSTRAINT FK_take_from_Section FOREIGN KEY (s_sectionID) REFERENCES Section(s_sectionID) ON DELETE CASCADE
);

CREATE TABLE probator (
    st_ID VARCHAR(255) PRIMARY KEY,
    CONSTRAINT FK_probator_from_Student FOREIGN KEY (st_ID) REFERENCES Student(st_ID) ON DELETE CASCADE
);

CREATE TABLE probation (
    st_ID VARCHAR(255) NOT NULL,
    st_startDate VARCHAR(255) NOT NULL,
    st_endDate VARCHAR(255) NOT NULL,
    st_reason VARCHAR(255) NOT NULL,
    CONSTRAINT PK_probation_group PRIMARY KEY(st_ID, st_startDate, st_endDate, st_reason),
    CONSTRAINT FK_probation_from_probator FOREIGN KEY (st_ID) REFERENCES probator(st_ID) ON DELETE CASCADE
);

CREATE TABLE WeeklyMeetings (
    location VARCHAR(255) NOT NULL,
    time VARCHAR(255) NOT NULL,
    startTime VARCHAR(255),
    endTime VARCHAR(255),
    meetingType VARCHAR(255) NOT NULL,
    daysOfWeek VARCHAR(255) NOT NULL,
    attendanceType VARCHAR(255) NOT NULL,
    s_sectionID VARCHAR(255) NOT NULL,
    CONSTRAINT FK_WeeklyMeetings_from_Section FOREIGN KEY (s_sectionID) REFERENCES Section(s_sectionID) ON DELETE CASCADE
);

CREATE TABLE ReviewSessions (
    location VARCHAR(255) NOT NULL,
    time VARCHAR(255) NOT NULL,
    startTime VARCHAR(255),
    endTime VARCHAR(255),
    date VARCHAR(255) NOT NULL,
    s_sectionID VARCHAR(255) NOT NULL,
    CONSTRAINT FK_ReviewSessions_from_Section FOREIGN KEY (s_sectionID) REFERENCES Section(s_sectionID) ON DELETE CASCADE
);

CREATE TABLE Degree (
    majorCode VARCHAR(255) PRIMARY KEY,
    total INT NOT NULL,
    lower INT,
    upper INT,
    elective INT,
    technical INT,
    min_gpa DECIMAL(2,1),
    type VARCHAR(255)
);

CREATE TABLE ThesisCommittee (
    tc_ID VARCHAR(255) PRIMARY KEY,
    st_id VARCHAR(255) NOT NULL,
    CONSTRAINT FK_ThesisCommittee_from_Candidate FOREIGN KEY (st_id) REFERENCES Candidate(st_id) ON DELETE CASCADE
);

CREATE TABLE TCProfs (
    tc_ID VARCHAR(255) NOT NULL,
    fc_name VARCHAR(255) NOT NULL,
    CONSTRAINT FK_TCProfs_from_Faculty FOREIGN KEY (fc_name) REFERENCES Faculty(fc_name) ON DELETE CASCADE
);

CREATE TABLE CurrentCourses (
    cr_courseNumber VARCHAR(255) NOT NULL,
    cl_title VARCHAR(255) NOT NULL,
    cl_year INT NOT NULL,
    cl_quarter VARCHAR(255) NOT NULL,
    s_sectionID VARCHAR(255) NOT NULL,
    CONSTRAINT FK_CurrentCourses_from_Course FOREIGN KEY (cr_courseNumber) REFERENCES Course(cr_courseNumber) ON DELETE CASCADE,
    CONSTRAINT FK_CurrentCourses_from_Class FOREIGN KEY (cl_title, cl_year, cl_quarter) REFERENCES Class(cl_title, cl_year, cl_quarter) ON DELETE CASCADE,
    CONSTRAINT FK_CurrentCourses_from__Section FOREIGN KEY (s_sectionID) REFERENCES Section(s_sectionID) ON DELETE CASCADE
);

CREATE TABLE CourseOffering (
    cr_courseNumber VARCHAR(255) NOT NULL,
    cl_title VARCHAR(255) NOT NULL,
    cl_year INT NOT NULL,
    cl_quarter VARCHAR(255) NOT NULL,
    CONSTRAINT FK_cr1 FOREIGN KEY (cr_courseNumber) REFERENCES Course(cr_courseNumber) ON DELETE CASCADE,
    CONSTRAINT FK_cl1 FOREIGN KEY (cl_title, cl_year, cl_quarter) REFERENCES Class(cl_title, cl_year, cl_quarter) ON DELETE CASCADE
);

CREATE TABLE Concentration (
    name VARCHAR(255) PRIMARY KEY,
    min_units INT NOT NULL,
    min_gpa DECIMAL(2,1)
);

CREATE TABLE ConcentrationCourses (
    name VARCHAR(255) NOT NULL,
    cr_courseNumber VARCHAR(255) NOT NULL,
    CONSTRAINT fk_conCou_con FOREIGN KEY (name) REFERENCES Concentration(name) ON DELETE CASCADE,
    CONSTRAINT fk_conCou_c FOREIGN KEY (cr_courseNumber) REFERENCES Course(cr_courseNumber) ON DELETE CASCADE
);

CREATE TABLE DegreeConcentrations (
    majorCode VARCHAR(255) NOT NULL,
    concentrationName VARCHAR(255) NOT NULL,
    CONSTRAINT fk_dc_d FOREIGN KEY (majorCode) REFERENCES Degree(majorCode) ON DELETE CASCADE,
    CONSTRAINT fk_dc_con FOREIGN KEY (concentrationName) REFERENCES Concentration(name) ON DELETE CASCADE
);

