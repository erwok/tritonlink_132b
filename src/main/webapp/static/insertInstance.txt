<<<<<<< HEAD
=======
[DROP every relations]
DROP TABLE booklist, candidate, class, course, currentcourses, degree, faculty, master, pasttake, pasttaker, precandidate, prerequisite, probation, probator, reviewsessions, section, student, student_enrollment, student_section, take, taker, tcprofs, teaches, thesiscommittee, undergraduate, weeklymeetings;

[CREATE every relations]
CREATE TABLE Course (cr_courseNumber VARCHAR(255) PRIMARY KEY, cr_minUnits INT NOT NULL, cr_maxUnits INT NOT NULL, cr_gradeOption VARCHAR(255) NOT NULL, cr_lab VARCHAR(255), cr_consent VARCHAR(255));
CREATE TABLE Prerequisite (prerequisites_id VARCHAR(255) PRIMARY KEY, mainCourseNumber VARCHAR(255) NOT NULL, prerequisiteCourseNumber VARCHAR(255) NOT NULL, CONSTRAINT FK_PreCourse1 FOREIGN KEY (mainCourseNumber) REFERENCES Course(cr_courseNumber), CONSTRAINT FK_PreCourse2 FOREIGN KEY (prerequisiteCourseNumber) REFERENCES Course(cr_courseNumber));
CREATE TABLE Class (cl_title VARCHAR(255) NOT NULL, cl_year INT NOT NULL, cl_quarter VARCHAR(255) NOT NULL, CONSTRAINT PK_Class_group PRIMARY KEY(cl_title, cl_year, cl_quarter));
CREATE TABLE CourseOffering (cr_courseNumber VARCHAR(255) NOT NULL, cl_title VARCHAR(255) NOT NULL, cl_year INT NOT NULL, cl_quarter VARCHAR(255) NOT NULL, CONSTRAINT FK_CourseOffering_from_Class FOREIGN KEY (cr_courseNumber) REFERENCES Course(cr_courseNumber), CONSTRAINT FK_CourseOffering_from_Class FOREIGN KEY (cl_title, cl_year, cl_quarter) REFERENCES Class(cl_title, cl_year, cl_quarter));
CREATE TABLE Faculty (fc_name VARCHAR(255) PRIMARY KEY);
CREATE TABLE Student (st_ID VARCHAR(255) PRIMARY KEY, st_SSN VARCHAR(255) UNIQUE NOT NULL, st_enrollmentStatus VARCHAR(255) NOT NULL, st_residential VARCHAR(255) NOT NULL, st_firstName VARCHAR(255) NOT NULL, st_middleName VARCHAR(255), st_lastName VARCHAR(255) NOT NULL);
CREATE TABLE Section (s_sectionID VARCHAR(255) PRIMARY KEY, s_capacity INT NOT NULL, courseNumber VARCHAR(255) NOT NULL, classTitle VARCHAR(255) NOT NULL, classYear INT NOT NULL, classQuarter VARCHAR(255) NOT NULL, CONSTRAINT FK_Section_from_Course FOREIGN KEY (courseNumber) REFERENCES Course(cr_courseNumber), CONSTRAINT FK_Section_from_Class FOREIGN KEY (classTitle, classYear, classQuarter) REFERENCES Class(cl_title, cl_year, cl_quarter));
CREATE TABLE Teaches (s_sectionID VARCHAR(255) NOT NULL, fc_name VARCHAR(255) NOT NULL, CONSTRAINT FK_Teaches_from_Section FOREIGN KEY (s_sectionID) REFERENCES Section(s_sectionID), CONSTRAINT FK_Teaches_from_Faculty FOREIGN KEY (fc_name) REFERENCES Faculty(fc_name));
CREATE TABLE Booklist (ISBN INT UNIQUE NOT NULL, title VARCHAR(255) NOT NULL, edition INT, publisher VARCHAR(255), author_fname VARCHAR(255),  author_lname VARCHAR(255), s_sectionID VARCHAR(255) NOT NULL, CONSTRAINT FK_Booklist_from_Section FOREIGN KEY (s_sectionID) REFERENCES Section(s_sectionID));
CREATE TABLE taker (st_ID VARCHAR(255) PRIMARY KEY, CONSTRAINT FK_taker_from_Student FOREIGN KEY (st_ID) REFERENCES Student(st_ID));
CREATE TABLE take (st_ID VARCHAR(255) NOT NULL, cr_courseNumber VARCHAR(255) NOT NULL, cl_title VARCHAR(255) NOT NULL, cl_year INT NOT NULL, cl_quarter VARCHAR(255) NOT NULL, s_sectionID VARCHAR(255) NOT NULL, take_enrollmentStatus VARCHAR(255) NOT NULL, take_gradingOption VARCHAR(255) NOT NULL, CONSTRAINT FK_take_from_taker FOREIGN KEY (st_ID) REFERENCES taker(st_ID), CONSTRAINT FK_take_from_Course FOREIGN KEY (cr_courseNumber) REFERENCES Course(cr_courseNumber), CONSTRAINT FK_take_from_Class FOREIGN KEY (cl_title, cl_year, cl_quarter) REFERENCES Class(cl_title, cl_year, cl_quarter), CONSTRAINT FK_take_from_Section FOREIGN KEY (s_sectionID) REFERENCES Section(s_sectionID));
CREATE TABLE probator (st_ID VARCHAR(255) PRIMARY KEY, CONSTRAINT FK_probator_from_Student FOREIGN KEY (st_ID) REFERENCES Student(st_ID));
CREATE TABLE probation (st_ID VARCHAR(255) NOT NULL, st_startDate VARCHAR(255) NOT NULL, st_endDate VARCHAR(255) NOT NULL, st_reason VARCHAR(255) NOT NULL, CONSTRAINT PK_probation_group PRIMARY KEY(st_ID, st_startDate, st_endDate, st_reason), CONSTRAINT FK_probation_from_probator FOREIGN KEY (st_ID) REFERENCES probator(st_ID));
CREATE TABLE WeeklyMeetings (location VARCHAR(255) NOT NULL, time VARCHAR(255) NOT NULL, meetingType VARCHAR(255) NOT NULL, daysOfWeek VARCHAR(255) NOT NULL, attendanceType VARCHAR(255) NOT NULL, s_sectionID VARCHAR(255) NOT NULL, CONSTRAINT FK_WeeklyMeetings_from_Section FOREIGN KEY (s_sectionID) REFERENCES Section(s_sectionID));
CREATE TABLE ReviewSessions (location VARCHAR(255) NOT NULL, time VARCHAR(255) NOT NULL, date VARCHAR(255) NOT NULL, s_sectionID VARCHAR(255) NOT NULL, CONSTRAINT FK_ReviewSessions_from_Section FOREIGN KEY (s_sectionID) REFERENCES Section(s_sectionID));
CREATE TABLE Degree (majorCode VARCHAR(255) PRIMARY KEY, requiredTotalUnits INT NOT NULL, requiredLowerDivUnits INT, requiredUpperDivUnits INT);
CREATE TABLE Undergraduate (st_ID VARCHAR(255) PRIMARY KEY, st_SSN VARCHAR(255) UNIQUE NOT NULL, st_enrollmentStatus VARCHAR(255) NOT NULL, st_residential VARCHAR(255) NOT NULL, st_firstName VARCHAR(255) NOT NULL, st_middleName VARCHAR(255), st_lastName VARCHAR(255) NOT NULL, major VARCHAR(255) NOT NULL, minor VARCHAR(255) NOT NULL);
CREATE TABLE Master (st_ID VARCHAR(255) PRIMARY KEY, st_SSN VARCHAR(255) UNIQUE NOT NULL, st_enrollmentStatus VARCHAR(255) NOT NULL, st_residential VARCHAR(255) NOT NULL, st_firstName VARCHAR(255) NOT NULL, st_middleName VARCHAR(255), st_lastName VARCHAR(255) NOT NULL);
CREATE TABLE Precandidate (st_ID VARCHAR(255) PRIMARY KEY, st_SSN VARCHAR(255) UNIQUE NOT NULL, st_enrollmentStatus VARCHAR(255) NOT NULL, st_residential VARCHAR(255) NOT NULL, st_firstName VARCHAR(255) NOT NULL, st_middleName VARCHAR(255), st_lastName VARCHAR(255) NOT NULL);
CREATE TABLE Candidate (st_ID VARCHAR(255) PRIMARY KEY, st_SSN VARCHAR(255) UNIQUE NOT NULL, st_enrollmentStatus VARCHAR(255) NOT NULL, st_residential VARCHAR(255) NOT NULL, st_firstName VARCHAR(255) NOT NULL, st_middleName VARCHAR(255), st_lastName VARCHAR(255) NOT NULL, advisor VARCHAR(255) NOT NULL);
CREATE TABLE ThesisCommittee (tc_ID VARCHAR(255) PRIMARY KEY, st_id VARCHAR(255) NOT NULL, CONSTRAINT FK_ThesisCommittee_from_Candidate FOREIGN KEY (st_id) REFERENCES Candidate(st_id));
CREATE TABLE TCProfs (tc_ID VARCHAR(255) NOT NULL, fc_name VARCHAR(255) NOT NULL, CONSTRAINT FK_TCProfs_from_Faculty FOREIGN KEY (fc_name) REFERENCES Faculty(fc_name));
CREATE TABLE CurrentCourses (cr_courseNumber VARCHAR(255) NOT NULL, cl_title VARCHAR(255) NOT NULL, cl_year INT NOT NULL, cl_quarter VARCHAR(255) NOT NULL, s_sectionID VARCHAR(255) NOT NULL, CONSTRAINT FK_CurrentCourses_from_Course FOREIGN KEY (cr_courseNumber) REFERENCES Course(cr_courseNumber), CONSTRAINT FK_CurrentCourses_from_Class FOREIGN KEY (cl_title, cl_year, cl_quarter) REFERENCES Class(cl_title, cl_year, cl_quarter), CONSTRAINT FK_CurrentCourses_from__Section FOREIGN KEY (s_sectionID) REFERENCES Section(s_sectionID));
CREATE TABLE pastTaker (st_ID VARCHAR(255) PRIMARY KEY, CONSTRAINT FK_pastTaker_from_Student FOREIGN KEY (st_ID) REFERENCES Student(st_ID));
CREATE TABLE pastTake (st_ID VARCHAR(255) NOT NULL, cr_courseNumber VARCHAR(255) NOT NULL, cl_title VARCHAR(255) NOT NULL, cl_year INT NOT NULL, cl_quarter VARCHAR(255) NOT NULL, s_sectionID VARCHAR(255) NOT NULL, take_enrollmentStatus VARCHAR(255) NOT NULL, take_gradingOption VARCHAR(255) NOT NULL, CONSTRAINT FK_pastTake_from_pastTaker FOREIGN KEY (st_ID) REFERENCES pastTaker(st_ID), CONSTRAINT FK_pastTake_from_Course FOREIGN KEY (cr_courseNumber) REFERENCES Course(cr_courseNumber), CONSTRAINT FK_pastTake_from_Class FOREIGN KEY (cl_title, cl_year, cl_quarter) REFERENCES Class(cl_title, cl_year, cl_quarter), CONSTRAINT FK_pastTake_from_Section FOREIGN KEY (s_sectionID) REFERENCES Section(s_sectionID));
CREATE TABLE STUDENT_ENROLLMENT (st_id VARCHAR(255) NOT NULL, quarter VARCHAR(255) NOT NULL, year INT NOT NULL, enrollment_status VARCHAR(255) NOT NULL, CONSTRAINT FK_STUDENTENROLLMENT_from_Student FOREIGN KEY (st_id) REFERENCES Student(st_id));
CREATE TABLE STUDENT_SECTION (st_id VARCHAR(255) NOT NULL, cr_courseNumber VARCHAR(255) NOT NULL, cl_title VARCHAR(255) NOT NULL, cl_year INT NOT NULL, cl_quarter VARCHAR(255) NOT NULL, s_sectionID VARCHAR(255) NOT NULL, enrollment_status VARCHAR(255) NOT NULL, CONSTRAINT FK_STUDENTSECTION_from_Student FOREIGN KEY (st_id) REFERENCES Student(st_id), CONSTRAINT FK_STUDENTSECTION_from_Course FOREIGN KEY (cr_courseNumber) REFERENCES Course(cr_courseNumber), CONSTRAINT FK_STUDENTSECTION_from_Class FOREIGN KEY (cl_title, cl_year, cl_quarter) REFERENCES Class(cl_title, cl_year, cl_quarter));

[INSERT instances into relations]
INSERT INTO Course (cr_courseNumber, cr_minUnits INT NOT NULL, cr_maxUnits INT NOT NULL, cr_gradeOption, cr_lab VARCHAR(255), cr_consent VARCHAR(255));
INSERT INTO Prerequisite (prerequisites_id, mainCourseNumber, prerequisiteCourseNumber, CONSTRAINT FK_PreCourse1 FOREIGN KEY (mainCourseNumber) REFERENCES Course(cr_courseNumber), CONSTRAINT FK_PreCourse2 FOREIGN KEY (prerequisiteCourseNumber) REFERENCES Course(cr_courseNumber));
INSERT INTO Class (cl_title, cl_year INT NOT NULL, cl_quarter, CONSTRAINT PK_Class_group PRIMARY KEY(cl_title, cl_year, cl_quarter));
INSERT INTO CourseOffering (cr_courseNumber, cl_title, cl_year INT NOT NULL, cl_quarter, CONSTRAINT FK_CourseOffering_from_Class FOREIGN KEY (cr_courseNumber) REFERENCES Course(cr_courseNumber), CONSTRAINT FK_CourseOffering_from_Class FOREIGN KEY (cl_title, cl_year, cl_quarter) REFERENCES Class(cl_title, cl_year, cl_quarter));
INSERT INTO Faculty (fc_name);
INSERT INTO Student (st_ID, st_SSN VARCHAR(255) UNIQUE NOT NULL, st_enrollmentStatus, st_residential, st_firstName, st_middleName VARCHAR(255), st_lastName);
INSERT INTO Section (s_sectionID, s_capacity INT NOT NULL, courseNumber, classTitle, classYear INT NOT NULL, classQuarter, CONSTRAINT FK_Section_from_Course FOREIGN KEY (courseNumber) REFERENCES Course(cr_courseNumber), CONSTRAINT FK_Section_from_Class FOREIGN KEY (classTitle, classYear, classQuarter) REFERENCES Class(cl_title, cl_year, cl_quarter));
INSERT INTO Teaches (s_sectionID, fc_name, CONSTRAINT FK_Teaches_from_Section FOREIGN KEY (s_sectionID) REFERENCES Section(s_sectionID), CONSTRAINT FK_Teaches_from_Faculty FOREIGN KEY (fc_name) REFERENCES Faculty(fc_name));
INSERT INTO Booklist (ISBN INT UNIQUE NOT NULL, title, edition INT, publisher VARCHAR(255), author_fname VARCHAR(255),  author_lname VARCHAR(255), s_sectionID, CONSTRAINT FK_Booklist_from_Section FOREIGN KEY (s_sectionID) REFERENCES Section(s_sectionID));
INSERT INTO taker (st_ID, CONSTRAINT FK_taker_from_Student FOREIGN KEY (st_ID) REFERENCES Student(st_ID));
INSERT INTO take (st_ID, cr_courseNumber, cl_title, cl_year INT NOT NULL, cl_quarter, s_sectionID, take_enrollmentStatus, take_gradingOption, CONSTRAINT FK_take_from_taker FOREIGN KEY (st_ID) REFERENCES taker(st_ID), CONSTRAINT FK_take_from_Course FOREIGN KEY (cr_courseNumber) REFERENCES Course(cr_courseNumber), CONSTRAINT FK_take_from_Class FOREIGN KEY (cl_title, cl_year, cl_quarter) REFERENCES Class(cl_title, cl_year, cl_quarter), CONSTRAINT FK_take_from_Section FOREIGN KEY (s_sectionID) REFERENCES Section(s_sectionID));
INSERT INTO probator (st_ID, CONSTRAINT FK_probator_from_Student FOREIGN KEY (st_ID) REFERENCES Student(st_ID));
INSERT INTO probation (st_ID, st_startDate, st_endDate, st_reason, CONSTRAINT PK_probation_group PRIMARY KEY(st_ID, st_startDate, st_endDate, st_reason), CONSTRAINT FK_probation_from_probator FOREIGN KEY (st_ID) REFERENCES probator(st_ID));
INSERT INTO WeeklyMeetings (location, time, meetingType, daysOfWeek, attendanceType, s_sectionID, CONSTRAINT FK_WeeklyMeetings_from_Section FOREIGN KEY (s_sectionID) REFERENCES Section(s_sectionID));
INSERT INTO ReviewSessions (location, time, date, s_sectionID, CONSTRAINT FK_ReviewSessions_from_Section FOREIGN KEY (s_sectionID) REFERENCES Section(s_sectionID));
INSERT INTO Degree (majorCode, requiredTotalUnits INT NOT NULL, requiredLowerDivUnits INT, requiredUpperDivUnits INT);
INSERT INTO Undergraduate (st_ID, st_SSN VARCHAR(255) UNIQUE NOT NULL, st_enrollmentStatus, st_residential, st_firstName, st_middleName VARCHAR(255), st_lastName, major, minor);
INSERT INTO Master (st_ID, st_SSN VARCHAR(255) UNIQUE NOT NULL, st_enrollmentStatus, st_residential, st_firstName, st_middleName VARCHAR(255), st_lastName);
INSERT INTO Precandidate (st_ID, st_SSN VARCHAR(255) UNIQUE NOT NULL, st_enrollmentStatus, st_residential, st_firstName, st_middleName VARCHAR(255), st_lastName);
INSERT INTO Candidate (st_ID, st_SSN VARCHAR(255) UNIQUE NOT NULL, st_enrollmentStatus, st_residential, st_firstName, st_middleName VARCHAR(255), st_lastName, advisor);
INSERT INTO ThesisCommittee (tc_ID, st_id, CONSTRAINT FK_ThesisCommittee_from_Candidate FOREIGN KEY (st_id) REFERENCES Candidate(st_id));
INSERT INTO TCProfs (tc_ID, fc_name, CONSTRAINT FK_TCProfs_from_Faculty FOREIGN KEY (fc_name) REFERENCES Faculty(fc_name));
INSERT INTO CurrentCourses (cr_courseNumber, cl_title, cl_year INT NOT NULL, cl_quarter, s_sectionID, CONSTRAINT FK_CurrentCourses_from_Course FOREIGN KEY (cr_courseNumber) REFERENCES Course(cr_courseNumber), CONSTRAINT FK_CurrentCourses_from_Class FOREIGN KEY (cl_title, cl_year, cl_quarter) REFERENCES Class(cl_title, cl_year, cl_quarter), CONSTRAINT FK_CurrentCourses_from__Section FOREIGN KEY (s_sectionID) REFERENCES Section(s_sectionID));
INSERT INTO pastTaker (st_ID, CONSTRAINT FK_pastTaker_from_Student FOREIGN KEY (st_ID) REFERENCES Student(st_ID));
INSERT INTO pastTake (st_ID, cr_courseNumber, cl_title, cl_year INT NOT NULL, cl_quarter, s_sectionID, take_enrollmentStatus, take_gradingOption, CONSTRAINT FK_pastTake_from_pastTaker FOREIGN KEY (st_ID) REFERENCES pastTaker(st_ID), CONSTRAINT FK_pastTake_from_Course FOREIGN KEY (cr_courseNumber) REFERENCES Course(cr_courseNumber), CONSTRAINT FK_pastTake_from_Class FOREIGN KEY (cl_title, cl_year, cl_quarter) REFERENCES Class(cl_title, cl_year, cl_quarter), CONSTRAINT FK_pastTake_from_Section FOREIGN KEY (s_sectionID) REFERENCES Section(s_sectionID));
INSERT INTO STUDENT_ENROLLMENT (st_id, quarter, year INT NOT NULL, enrollment_status, CONSTRAINT FK_STUDENTENROLLMENT_from_Student FOREIGN KEY (st_id) REFERENCES Student(st_id));
INSERT INTO STUDENT_SECTION (st_id, cr_courseNumber, cl_title, cl_year INT NOT NULL, cl_quarter, s_sectionID, enrollment_status, CONSTRAINT FK_STUDENTSECTION_from_Student FOREIGN KEY (st_id) REFERENCES Student(st_id), CONSTRAINT FK_STUDENTSECTION_from_Course FOREIGN KEY (cr_courseNumber) REFERENCES Course(cr_courseNumber), CONSTRAINT FK_STUDENTSECTION_from_Class FOREIGN KEY (cl_title, cl_year, cl_quarter) REFERENCES Class(cl_title, cl_year, cl_quarter));
>>>>>>> parent of 1c6d37d (change for showing related sectionID)
